name: Release

on:
  push:
    tags: ["v*"]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            goos: linux
            goarch: amd64
            cgo: "0"
            name: mcpproxy-linux-amd64
          - os: ubuntu-latest
            goos: windows
            goarch: amd64
            cgo: "0"
            name: mcpproxy-windows-amd64.exe
          - os: macos-latest
            goos: darwin
            goarch: amd64
            cgo: "1"
            name: mcpproxy-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            cgo: "1"
            name: mcpproxy-darwin-arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.10"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        env:
          CGO_ENABLED: ${{ matrix.cgo }}
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          LDFLAGS="-s -w -X mcpproxy-go/cmd/mcpproxy.version=${VERSION}"

          # Build versioned binary
          go build -ldflags "${LDFLAGS}" -o ${{ matrix.name }} ./cmd/mcpproxy

          # Create latest binary (copy of the versioned one)
          LATEST_NAME=$(echo "${{ matrix.name }}" | sed 's/-[^-]*-/-latest-/' | sed 's/\.exe$/-latest.exe/')
          cp ${{ matrix.name }} ${LATEST_NAME}

      - name: Upload versioned binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: ${{ matrix.name }}

      - name: Upload latest binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-latest
          path: |
            mcpproxy-latest-*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: List artifacts
        run: |
          echo "Downloaded artifacts:"
          find dist -type f -name "*mcpproxy*" -exec ls -la {} \;

      - name: Create release with binaries
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*/mcpproxy-*
          body: |
            ## mcpproxy ${{ github.ref_name }}

            Smart MCP Proxy - Intelligent tool discovery and proxying for Model Context Protocol servers.

            ### Quick Download Links

            **Latest Version (auto-updates):**
            - [Linux AMD64](https://github.com/${{ github.repository }}/releases/latest/download/mcpproxy-latest-linux-amd64)
            - [Windows AMD64](https://github.com/${{ github.repository }}/releases/latest/download/mcpproxy-latest-windows-amd64.exe)  
            - [macOS AMD64](https://github.com/${{ github.repository }}/releases/latest/download/mcpproxy-latest-darwin-amd64)
            - [macOS ARM64](https://github.com/${{ github.repository }}/releases/latest/download/mcpproxy-latest-darwin-arm64)

            **This Version (${{ github.ref_name }}):**
            - [Linux AMD64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcpproxy-linux-amd64)
            - [Windows AMD64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcpproxy-windows-amd64.exe)
            - [macOS AMD64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcpproxy-darwin-amd64)
            - [macOS ARM64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/mcpproxy-darwin-arm64)

            ### Installation

            1. Download the appropriate binary for your platform using the links above
            2. Make it executable: `chmod +x mcpproxy-*` (Linux/macOS)
            3. Run `./mcpproxy-*` to start

            ### Platform Support

            - **macOS**: Full system tray support with menu and icons
            - **Windows**: Full system tray support with menu and icons  
            - **Linux**: Headless mode only (no system tray due to compatibility)

            ### Usage

            - With tray: `./mcpproxy` (default)
            - Headless: `./mcpproxy --tray=false`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
